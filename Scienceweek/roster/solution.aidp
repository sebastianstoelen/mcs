/*************
  Lesrooster
*************/

theory T_exp : V{

  // A course must be taught the correct number of hours per week.
  ! c, g : #{ d, h : has(c, g, d, h)} >= hoursPerWeek(g, c).

  // A teacher can only teach one class at any time.
  ! t, d, h : #{g : mustTeach(t,g,d,h)} < 2.

  // A teacher must have the right degree to teach a course.
  ! t, g, c : taughtBy(g,c) = t => degree(t, c).

  // No courses wednesday afternoon
  ~(? c, g, h : has(c, g, wednesday, h) & h > 4).
  
  // A classgroup can only follow one class at any time.
  ! g, d, h : #{c : has(c,g,d,h)} < 2.
  
  // A teacher teaches the mustTeachs of his courses.
  { mustTeach(taughtBy(g,c),g,d,h) <- has(c,g,d,h). }
}

procedure name(){
	return "lesrooster"
}